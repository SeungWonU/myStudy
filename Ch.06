# 06 무식하기 풀기
## 6-1 도입
#### **완전 탐색**이란 가능한 방법을 **전부** 만들어 보는 알고리즘을 뜻한다.무식하게 푸는 것이 때론 빠른 알고리즘의 기반이 될 수 있다.

## 6-2 재귀 호출과 완전 탐색
*### 재귀 호출
#### **재귀 함수**란 자신이 수행할 작업을 유사한 형태의 여러 조각으로 쪼갠 뒤 그 중 한 조각을 수행하고, 나머지를 **자기 자신을 호출해 실행하는 함수**를 가르킨다.
>#### 1부터 n까지의 합을 계산하는 반복 함수와 재귀 함수
'''c++

int sum(int n){
int ret = 0;
for(int i=1;i<=n;++i)
ret+= i;
return ret;
}

int recursiveSum(int n){
if(n==1) return 1;
return n+ recursiveSum(n-1);
}
'''
#### 재귀 함수는 더이상 쪼개지지 않는 최소한의 작업에 도달했을 때 답을 곧장 반환하는 조건문을 포함해야 한다. 이러한 작업들을 가리켜 기저 사례(base case)라고 한다.
> #### 위 예제에서 n==1 일때 기저 사례이다.
#### 기저 사례는 또한 재귀 호출에 반드시 존재해야 한다.

*### 예제: 중첩 반복문 대체하기
